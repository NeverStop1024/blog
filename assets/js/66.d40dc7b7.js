(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{387:function(e,r,t){"use strict";t.r(r);var o=t(4),_=Object(o.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("  threejs中通过"),r("code",[e._v("BoxBufferGeometry")]),e._v("、"),r("code",[e._v("SphereBufferGeometry")]),e._v(" 可以分别用来创建长方体、球体。同样通过 "),r("code",[e._v("BoxGeometry")]),e._v("、"),r("code",[e._v("SphereGeometry")]),e._v("也可以用来分别创建长方体、球体。")]),e._v(" "),r("p",[e._v("  ."),r("code",[e._v("BoxBufferGeometry")]),e._v("、"),r("code",[e._v("SphereBufferGeometry")]),e._v("等Three.js API的基类是"),r("code",[e._v("BufferGeometry")]),e._v(","),r("code",[e._v("BoxGeometry")]),e._v("、"),r("code",[e._v("SphereGeometry")]),e._v("等Three.js API的基类是"),r("code",[e._v("Geometry")]),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("渲染过程")]),r("br"),e._v("\n  Three.js渲染器在解析几何体对象的时候，如果几何体对象是普通几何体对象 Geometry，Three.js 的 WebGL 渲染器会把普通几何体对象 Geometry转化为缓冲类型几何体对象BufferGeometry，然后再提取 BufferGeometry 包含的顶点信息。"),r("br"),e._v("\n  这里可以看出来直接使用 BufferGeometry 解析的时候相对 Geometry 少了一步，自然性能更高一些。不过从开发者使用的角度来看，Geometry可能对程序员更友好一些。")]),e._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.wenjiangs.com/article/sykt0gmr.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("BufferGeometry 和 Geometry 有什么不同"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.csdn.net/qq_30100043/article/details/80532335",target:"_blank",rel:"noopener noreferrer"}},[e._v("Geometry和BufferGeometry区别"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=_.exports}}]);