(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{490:function(t,a,n){"use strict";n.r(a);var r=n(4),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"为什么现在都推荐用pnpm安装项目依赖呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么现在都推荐用pnpm安装项目依赖呢"}},[t._v("#")]),t._v(" 为什么现在都推荐用pnpm安装项目依赖呢？")]),t._v(" "),a("ul",[a("li",[t._v("包安装速度极快")]),t._v(" "),a("li",[t._v("磁盘利用非常有效")])]),t._v(" "),a("h3",{attrs:{id:"为什么更节省磁盘空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么更节省磁盘空间"}},[t._v("#")]),t._v(" 为什么更节省磁盘空间")]),t._v(" "),a("p",[t._v("  使用pnpm安装的依赖都会放在pnpm本地的安装仓库，每次需要安装新依赖时候，都会先检查这个本地仓库，如果存在直接软链接的方式链接到我们的项目，如果不存在就先下载到本地仓库，再软链接到我们的项目。"),a("br"),t._v("\n  这样我们如果100个项目依赖了lodash，用yarn或npm需要装100次，而pnpm只需要安装一次。")]),t._v(" "),a("h3",{attrs:{id:"为什么安装速度极快"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么安装速度极快"}},[t._v("#")]),t._v(" 为什么安装速度极快")]),t._v(" "),a("p",[t._v("  yarn与npm3每次安装依赖都要重新网络下载，而pnpm会先去本地仓库查找，存在的话，直接软链接的方式，链接过来，不需要走网络，所以安装速度极快。")])])}),[],!1,null,null,null);a.default=s.exports}}]);